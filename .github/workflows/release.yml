name: Go Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build_release:
    name: Build release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.5
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          go get .
      - name: Build
        run: |
          for GOOS in darwin linux windows; do
            for GOARCH in amd64; do
              if [[ "${GOOS}" == "windows" ]]; then
                env SUFFIX=".exe"
              fi
              if [[ "${GOOS}" == "linux" ]]; then
                env CGO_ENABLED=0
              fi
              FILENAME="redish-${GOOS}-${GOARCH}-${{ github.ref_name }}${SUFFIX}"
              go build -v -o artifacts/${FILENAME}
              if [[ "${GOOS}" == "windows" ]]; then
                7z a artifacts/${FILENAME}.zip artifacts/${FILENAME}
                rm artifacts/${FILENAME}
              else
                tar -czvf artifacts/${FILENAME}.tar.gz artifacts/${FILENAME}
                rm artifacts/${FILENAME}
              fi
            done
          done 
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release create ${{ github.ref_name }} artifacts/* --generate-notes      
      # - name: Release Notes
      #   run:
      #     git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
      # - name: Release with Notes
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     body_path: ".github/RELEASE-TEMPLATE.md"
      #     draft: true
      #     files: artifacts/*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

